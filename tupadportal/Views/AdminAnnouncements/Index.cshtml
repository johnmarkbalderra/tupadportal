@model IEnumerable<tupadportal.Models.Announcement>

@{
    ViewData["Title"] = "Announcements";
}

<!-- Include Bootstrap Icons CDN -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<div class="row my-5">
    <div class="col-md-10 mx-auto rounded border p-5 shadow glass-effect">
        <!-- Flexbox to align the title to the left and buttons to the right -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2 class="text-start">Announcements List</h2>
            <div>
                <!-- Add Announcement Button with Icon -->
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createModal">
                    <i class="bi bi-plus-circle me-2"></i>Add Announcement
                </button>
                <!-- Delete Selected Button with Icon, hidden by default -->
                <button id="deleteSelected" class="btn btn-danger ms-2" style="display: none;" data-bs-toggle="modal" data-bs-target="#deleteSelectedModal">
                    <i class="bi bi-trash me-2"></i>Delete Selected
                </button>
            </div>
        </div>
        <hr />

        <!-- Responsive Table for Announcements List -->
        <div class="table-responsive">
            <table class="table table-hover table-striped">
                <thead class="table-secondary">
                    <tr>
                        <th>Title</th>
                        <th>Date</th> <!-- New Date Column -->
                        <th>Select</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                <h5 class="text-black clickable" data-bs-toggle="modal" data-bs-target="#detailsModal" data-id="@item.AnnouncementsId">
                                    <i class="bi bi-info-circle me-2"></i>@item.Title
                                </h5>
                            </td>
                            <td>
                                <!-- Display the announcement date -->
                                @item.CreatedDate.ToString("MMM dd, yyyy") <!-- Display date in the desired format -->
                            </td>
                            <td>
                                <!-- Checkbox for selection -->
                                <div class="form-check">
                                    <input class="form-check-input select-announcement" type="checkbox" value="@item.AnnouncementsId" id="select-@item.AnnouncementsId">
                                    <label class="form-check-label visually-hidden" for="select-@item.AnnouncementsId">
                                        Select @item.Title
                                    </label>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>






<!-- Details Modal -->
<div class="modal fade" id="detailsModal" tabindex="-1" aria-labelledby="detailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Announcement Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Details will be loaded here via AJAX -->
                <div id="detailsContent">
                    <p>Loading...</p>
                </div>
            </div>
            <div class="modal-footer">
                <!-- Edit Button with Icon -->
                <button id="editButton" type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#editModal">
                    <i class="bi bi-pencil me-2"></i>Edit
                </button>
                <!-- Delete Button with Icon -->
                <button id="deleteButton" type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal">
                    <i class="bi bi-trash me-2"></i>Delete
                </button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Create Modal -->
<div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create Announcement</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @Html.Partial("_CreatePartial", new tupadportal.Models.Announcement())
            </div>
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Announcement</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Edit form will be loaded here via AJAX -->
                <div id="editContent">
                    <p>Loading...</p>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Selected Modal -->
<div class="modal fade" id="deleteSelectedModal" tabindex="-1" aria-labelledby="deleteSelectedModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Selected Announcements</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the selected announcements?</p>
            </div>
            <div class="modal-footer">
                <form id="deleteSelectedForm" method="post" action="@Url.Action("DeleteSelected", "AdminAnnouncements")">
                    <input type="hidden" name="selectedIds" id="selectedIds" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">
                        <i class="bi bi-trash me-2"></i>Delete
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>


<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Announcement</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Delete confirmation will be loaded here via AJAX -->
                <div id="deleteContent">
                    <p>Loading...</p>
                </div>
            </div>
            <div class="modal-footer">
                
            </div>
        </div>
    </div>
</div>



<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    @if (TempData["SuccessMessage"] != null)
    {
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: '@TempData["SuccessMessage"]'
                });
            });
        </script>
    }
    <script>
        // Handle Details Modal Loading (Existing Code)
        var detailsModal = document.getElementById('detailsModal');
        detailsModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var id = button.getAttribute('data-id');
            var detailsContent = detailsModal.querySelector('#detailsContent');
            var editButton = detailsModal.querySelector('#editButton');
            var deleteButton = detailsModal.querySelector('#deleteButton');

            // Load Details via AJAX
            fetch('@Url.Action("Details", "AdminAnnouncements")/' + id, {
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.text();
                })
                .then(html => {
                    detailsContent.innerHTML = html;
                    editButton.setAttribute('data-id', id);
                    deleteButton.setAttribute('data-id', id);
                })
                .catch(error => {
                    detailsContent.innerHTML = '<p class="text-danger">Error loading details.</p>';
                    console.error('Error:', error);
                });
        });

        // Handle Edit Modal Loading (Existing Code)
        var editModal = document.getElementById('editModal');
        editModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var id = button.getAttribute('data-id');
            var editContent = editModal.querySelector('#editContent');

            // Load Edit form via AJAX
            fetch('@Url.Action("Edit", "AdminAnnouncements")/' + id, {
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.text();
                })
                .then(html => {
                    editContent.innerHTML = html;
                })
                .catch(error => {
                    editContent.innerHTML = '<p class="text-danger">Error loading edit form.</p>';
                    console.error('Error:', error);
                });
        });

        // Handle Delete Modal Loading (Existing Code)
        var deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var id = button.getAttribute('data-id');
            var deleteContent = deleteModal.querySelector('#deleteContent');

            // Load Delete confirmation via AJAX
            fetch('@Url.Action("Delete", "AdminAnnouncements")/' + id, {
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.text();
                })
                .then(html => {
                    deleteContent.innerHTML = html;
                })
                .catch(error => {
                    deleteContent.innerHTML = '<p class="text-danger">Error loading delete confirmation.</p>';
                    console.error('Error:', error);
                });
        });

        // Handle Checkbox Selection and Toggle Delete Button
        document.addEventListener('DOMContentLoaded', function () {
            const checkboxes = document.querySelectorAll('.select-announcement');
            const deleteSelectedButton = document.getElementById('deleteSelected');

            function toggleDeleteButton() {
                const anyChecked = Array.from(checkboxes).some(cb => cb.checked);
                deleteSelectedButton.style.display = anyChecked ? 'inline-block' : 'none';
            }

            checkboxes.forEach(cb => {
                cb.addEventListener('change', toggleDeleteButton);
            });

            // Handle Delete Selected Form submission
            const deleteSelectedForm = document.getElementById('deleteSelectedForm');
            deleteSelectedForm.addEventListener('submit', function (e) {
                const selectedIds = Array.from(checkboxes)
                    .filter(cb => cb.checked)
                    .map(cb => cb.value);
                if (selectedIds.length === 0) {
                    e.preventDefault();
                    Swal.fire({
                        icon: 'warning',
                        title: 'No Selection',
                        text: 'Please select at least one announcement to delete.'
                    });
                } else {
                    // Set the selected IDs in the hidden input
                    document.getElementById('selectedIds').value = selectedIds.join(',');
                }
            });
        });
    </script>
}
