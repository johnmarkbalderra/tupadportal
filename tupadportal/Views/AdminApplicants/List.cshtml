@model IEnumerable<tupadportal.Models.Applicants>

@{
    ViewData["Title"] = "Applicants List";
}
<div class="row my-5">
    <div class="col-md-11 mx-auto p-3">
        <h1>Applicants List</h1>

        <!-- Filters -->
        <div class="mb-3 d-flex align-items-center">
            <div class="me-3">
                <label for="barangayFilter" class="form-label">Filter by Barangay:</label>
                <select id="barangayFilter" class="form-select">
                    <option value="">All Barangays</option>
                    @foreach (var barangay in Model.Select(a => a.Address?.Barangay).Distinct().OrderBy(b => b))
                    {
                        <option value="@barangay">@barangay</option>
                    }
                </select>
            </div>
            <div>
                <label for="batchFilter" class="form-label">Filter by Batch:</label>
                <select id="batchFilter" class="form-select">
                    <option value="">All Batches</option>
                    <!-- Batch options will be dynamically updated based on the Barangay -->
                </select>
            </div>
            <!-- Save as PDF Button -->
            <div class="mb-3">
                <button id="saveAsPdfBtn" class="btn btn-primary">Save</button>
            </div>
        </div>



        <!-- Responsive Table -->
        <div class="table-responsive" id="printableTable">
            <table class="table table-striped table-bordered">
                <thead class="table-secondary">
                    <tr>
                        <th>No.</th>
                        <th>First Name</th>
                        <th>Middle Name</th>
                        <th>Last Name</th>
                        <th>Extension Name</th>
                        <th>Birthdate</th>
                        <th>Barangay</th>
                        @* <th>Batch</th> <!-- Display BatchName --> *@
                        <th>Type of ID</th>
                        <th>ID Number</th>
                        <th>Contact No</th>
                        <th>Occupation</th>
                        <th>Civil Status</th>
                        <th>Age</th>
                        <th>Average Monthly Income</th>
                        <th>Dependent</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var counter = 1; // Initialize the counter
                    }
                    @if (Model != null && Model.Any())
                    {

                        foreach (var applicant in Model)
                        {
                            <tr data-barangay="@applicant.Address?.Barangay" data-batch="@applicant.Batch?.BatchName">
                                <td>@counter</td>
                                <td>@applicant.FirstName</td>
                                <td>@applicant.MiddleName</td>
                                <td>@applicant.LastName</td>
                                <td>@(string.IsNullOrWhiteSpace(applicant.ExtensionName) ? "N/A" : applicant.ExtensionName)</td>
                                <td>@applicant.Birthdate.ToShortDateString()</td>
                                <td>@applicant.Address?.Barangay</td>
                                @* <td>@applicant.Batch?.BatchName</td> <!-- Display BatchName --> *@
                                <td>@applicant.IdType</td>
                                <td>@applicant.IdNumber</td>
                                <td>@applicant.ContactNo</td>
                                <td>@(string.IsNullOrWhiteSpace(applicant.Occupation) ? "N/A" : applicant.Occupation)</td>
                                <td>@applicant.CivilStatus</td>
                                <td>@applicant.Age</td>
                                <td>@applicant.MonthlyIncome</td>
                                <td>@(string.IsNullOrWhiteSpace(applicant.Dependent) ? "N/A" : applicant.Dependent)</td>
                            </tr>
                            counter++; // Increment the counter after each row
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="15" class="text-center">No applicants found.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- JavaScript for Filtering and PDF Generation -->
@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const barangayFilter = document.getElementById("barangayFilter");
            const batchFilter = document.getElementById("batchFilter");
            const tableRows = document.querySelectorAll("#printableTable tbody tr");

            // Filter Table Rows Based on Filters
            function filterTable() {
                const barangay = barangayFilter.value;
                const batch = batchFilter.value;

                tableRows.forEach(row => {
                    const rowBarangay = row.dataset.barangay || "";
                    const rowBatch = row.dataset.batch || "";

                    if (
                        (barangay === "" || rowBarangay === barangay) &&
                        (batch === "" || rowBatch === batch)
                    ) {
                        row.style.display = "";
                    } else {
                        row.style.display = "none";
                    }
                });
            }

            // Update Batch Filter Options Based on Selected Barangay
            barangayFilter.addEventListener("change", function () {
                const selectedBarangay = barangayFilter.value;

                // Clear and populate batch filter options
                batchFilter.innerHTML = '<option value="">All Batches</option>';
                const batches = Array.from(tableRows)
                    .filter(row => row.dataset.barangay === selectedBarangay || selectedBarangay === "")
                    .map(row => row.dataset.batch)
                    .filter((value, index, self) => value && self.indexOf(value) === index);

                batches.forEach(batch => {
                    const option = document.createElement("option");
                    option.value = batch;
                    option.textContent = batch;
                    batchFilter.appendChild(option);
                });

                filterTable();
            });

            // Attach Event Listeners to Filters
            barangayFilter.addEventListener("change", filterTable);
            batchFilter.addEventListener("change", filterTable);

            // Save as PDF Button
            document.getElementById("saveAsPdfBtn").addEventListener("click", function () {
                const { jsPDF } = window.jspdf;

                // Initialize jsPDF in landscape mode
                const pdf = new jsPDF({ orientation: "landscape" });

                // Target the table container for conversion
                const table = document.getElementById("printableTable");

                html2canvas(table).then((canvas) => {
                    const imgData = canvas.toDataURL("image/png");
                    const pageWidth = pdf.internal.pageSize.getWidth(); // Landscape page width
                    const pageHeight = (canvas.height * pageWidth) / canvas.width; // Maintain aspect ratio

                    // Add a title with the Barangay name
                    const barangayName = barangayFilter.value || "All Barangays";
                    pdf.setFontSize(16);
                    pdf.text(`Applicants List of ${barangayName}`, 10, 10);

                    // Add the image to the PDF
                    pdf.addImage(imgData, "PNG", 10, 20, pageWidth - 20, pageHeight - 20);

                    // Save the PDF
                    pdf.save("Applicants_List.pdf");
                });
            });
        });
    </script>
}
